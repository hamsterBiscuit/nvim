
# 标签页 状态栏
- repo: kyazdani42/nvim-web-devicons

#: tab 栏插件 提供 leader + number 切换buffer
- repo: akinsho/nvim-bufferline.lua
  depends: nvim-web-devicons
  hook_source: lua require("plugin-config.bufferline")

# 状态栏插件
- repo: glepnir/galaxyline.nvim
  hook_source: lua require("eviline")

# 开屏
- repo: glepnir/dashboard-nvim
  hook_source: lua require("plugin-config.dashboard")

- repo: Shougo/context_filetype.vim
  on_event: BufReadPre
  hook_source: let g:context_filetype#search_offset = 2000

# j k 增强插件
- repo: rhysd/accelerated-jk
  on_map: { n: <Plug> }

# gc gcc 注释插件
- repo: tyru/caw.vim
  depends: context_filetype.vim
  on_map: { nx: <Plug> }
  hook_add: |
    function! InitCaw() abort
      if !&l:modifiable
        silent! nunmap <buffer> gc
        silent! xunmap <buffer> gc
        silent! nunmap <buffer> gcc
        silent! xunmap <buffer> gcc
      else
        nmap <buffer> gc <Plug>(caw:prefix)
        xmap <buffer> gc <Plug>(caw:prefix)
        nmap <buffer> gcc <Plug>(caw:hatpos:toggle)
        xmap <buffer> gcc <Plug>(caw:hatpos:toggle)
      endif
    endfunction
    autocmd FileType * call InitCaw()
    call InitCaw()

# 快速跳转
- repo: justinmk/vim-sneak
  # on_map: { n: <Plug> }
# f t 增强
# - repo: hrsh7th/vim-eft
#   on_map: { nox: <Plug> }
#   hook_source: let g:eft_ignorecase = v:true

#  平滑滚动插件 半屏或者整屏翻页变为滚动效果
- repo: psliwka/vim-smoothie
  on_event: [BufReadPre, BufNewFile]

# 增删改引号
- repo: kana/vim-operator-user

- repo: rhysd/vim-operator-surround
  on_source: vim-operator-user
  on_map: { vnx: <Plug> }

# 任务 异步run term 插件
- repo: skywind3000/asyncrun.vim
  hook_source: |
    let g:asyncrun_open = 6
    let g:asyncrun_mode = "term"

- repo: skywind3000/asyncrun.extra

- repo: skywind3000/asynctasks.vim
  hook_source: let g:asynctasks_term_pos = 'termhelp'
  on_cmd: [AsyncTask, AsyncTaskMacro, AsyncTaskList, AsyncTaskEdit]

- repo: skywind3000/vim-terminal-help

# 缩进线插件
- repo: glepnir/indent-guides.nvim
  on_event: [BufReadPre, BufNewFile]
  hook_source: |
    lua <<EOF
    require("indent_guides").setup {
      even_colors = {fg = "NONE", bg = "#23272e"},
      odd_colors = {fg = "NONE", bg = "#23272e"}
    }
    EOF

# 当前光标下划线 高亮
- repo: itchyny/vim-cursorword
  on_event: [BufReadPre, BufNewFile]
  hook_source: lua require("plugin-config.vim-cursorword")

# 颜色荧光笔
- repo: norcalli/nvim-colorizer.lua
  hook_source: lua require("plugin-config.nvim-colorizer")
  on_ft:
    [
      html,
      css,
      sass,
      scss,
      vim,
      javascript,
      javascriptreact,
      typescript,
      typescriptreact,
      vue,
      lua
    ]

# fuzzyfind 模糊搜索
- repo: nvim-telescope/telescope.nvim
  on_cmd: Telescope
  hook_source: lua require("plugin-config.telescope")

- repo: nvim-lua/popup.nvim
  on_source: telescope.nvim

- repo: nvim-lua/plenary.nvim
  on_source: [telescope.nvim, gitsigns.nvim]

# 高亮 主题
- repo: nvim-treesitter/nvim-treesitter
  on_event: BufRead
  hook_source: lua require("plugin-config.treesitter")

- repo: nvim-treesitter/nvim-treesitter-textobjects
  on_source: nvim-treesitter

# 文件管理
- repo: kyazdani42/nvim-tree.lua
  hook_source: lua require("plugin-config.nvim-tree")

# 补全
- repo: neovim/nvim-lspconfig
  on_event: BufRead
  hook_source: lua require("plugin-config.lsp")

- repo: glepnir/lspsaga.nvim
  on_cmd: Lspsaga
  on_source: nvim-lspconfig
  hook_source: lua require("lspsaga").init_lsp_saga()

- repo: hrsh7th/nvim-compe
  on_event: InsertEnter
  hook_source: lua require("plugin-config.nvim-compe")

- repo: hrsh7th/vim-vsnip
  on_event: InsertCharPre
  hook_source: |
    let g:vsnip_filetypes = {}
    let g:vsnip_filetypes.javascriptreact = ["javascript"]
    let g:vsnip_filetypes.vue = ["vue", "javascript", "typescript"]
    let g:vsnip_filetypes.typescriptreact = ["typescript"]

- repo: hrsh7th/vim-vsnip-integ
  on_event: InsertCharPre

- repo: dsznajder/vscode-es7-javascript-react-snippets
  on_event: InsertCharPre

- repo: xabikos/vscode-javascript
  on_event: InsertCharPre

- repo: hollowtree/vscode-vue-snippets
  on_event: InsertCharPre

# git信息展示 :SignifyDiff
- repo: lewis6991/gitsigns.nvim
  on_event: [BufReadPre, BufNewFile]
  hook_source: lua require("gitsigns").setup()

- repo: f-person/git-blame.nvim
  on_event: [BufReadPre, BufNewFile]

# 自动括号括回
- repo: Raimondi/delimitMate
  on_event: [BufReadPre, BufNewFile]
  hook_source: lua require("plugin-config.delimitMate")

# 目前配置了lua和js，ts的格式化
- repo: mhartington/formatter.nvim
  on_cmd: Format
  hook_source: lua require("plugin-config.formatter")

# Tag 展示插件，目前主要使用lsp提供，CTAG也依然好用
- repo: liuchengxu/vista.vim
  on_cmd: [Vista, Vista!, Vista!!]
  hook_source: lua require("plugin-config.vista")

# lang Prettier 用来格式化js ts文件，formatter 配置为默认使用项目下
# Prettier,这个是全局的
- repo: prettier/vim-prettier
  build: 'sh -c "cd app & yarn install"'
  on_cmd: Prettier

# editorconfig
# 编辑器配置，个大编辑器都有实现或者有插件，用来统一项目的编辑格式，比如锁进等文件规范
- repo: editorconfig/editorconfig-vim

# 同步预览MD文件 :MarkdownPreview
- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown, pandoc.markdown, rmd]
  build: 'sh -c "cd app & yarn install"'
# emmei插件 使用 ,, 触发补全，
- repo: mattn/emmet-vim
  on_event: InsertEnter
  hook_source: lua require("plugin-config.emmet")

- repo: posva/vim-vue
  on_ft: vue
  hook_source: let g:vue_pre_processors = "detect_on_enter"
